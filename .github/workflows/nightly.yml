name: Nightly OVMF.fd Builds

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  
jobs:
  nightly:
    name: Nightly OVMF.fd Build
    runs-on: ubuntu-latest
    container: archlinux:latest

    steps:
      - name: Install dependencies
        run: pacman --noconfirm -Syu && pacman --needed --noconfirm -S base-devel git wget python acpica nasm

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Git config
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Rebuild
        run: |
          set -ex

          GCC_VERSION=14.2.0

          git clone --recursive --depth=1 https://github.com/tianocore/edk2.git

          ( cd edk2 && patch -p1 <../ovmf.patch )

          export PACKAGES_PATH="$(pwd -P)"/edk2
          set +e
          . edk2/edksetup.sh
          set -e
          make -C edk2/BaseTools

          build -b RELEASE -t GCC5 -a X64 -p OvmfPkg/OvmfPkgX64.dsc -D FD_SIZE_2MB

          mkdir -p output

          cp Build/OvmfX64/RELEASE_GCC5/FV/OVMF_CODE.fd output/ovmf-code-x86_64.fd
          cp Build/OvmfX64/RELEASE_GCC5/FV/OVMF_VARS.fd output/ovmf-vars-x86_64.fd
          cp Build/OvmfX64/RELEASE_GCC5/FV/OVMF.fd output/ovmf.86_64.fd

      - name: Set TAG_DATE variable
        run: echo "TAG_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Tag new nightly release
        run: git tag nightly-$TAG_DATE && git push --tags

      - name: Create nightly release
        uses: softprops/action-gh-release@v2
        with:
          name: Nightly Build ${{ env.TAG_DATE }}
          tag_name: nightly-${{ env.TAG_DATE }}
          body: Images of an up to date EDK2 OVMF nightly build.
          files: |
            output/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
